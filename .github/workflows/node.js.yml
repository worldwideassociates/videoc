name: Videoc CI

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.12.2]

    env:
      AUTH_GOOGLE_ID: ${{secrets.AUTH_GOOGLE_ID}}
      AUTH_GOOGLE_SECRET: ${{secrets.AUTH_GOOGLE_SECRET}}
      AUTH_SECRET: ${{secrets.AUTH_SECRET}}

      MYSQL_ROOT_PASSWORD: ${{secrets.MYSQL_ROOT_PASSWORD}}
      MYSQL_DATABASE: ${{secrets.MYSQL_DATABASE}}
      MYSQL_USER: ${{secrets.MYSQL_USER}}
      MYSQL_PASSWORD: ${{secrets.MYSQL_PASSWORD}}
      MYSQL_PORT: ${{secrets.MYSQL_PORT}}
      MYSQL_HOST: ${{secrets.MYSQL_HOST}}

      DATABASE_URL: ${{secrets.DATABASE_URL}}

      SMTP_PORT: ${{secrets.SMTP_PORT}}
      SMTP_HOST: ${{secrets.SMTP_HOST}}
      SMTP_USER: ${{secrets.SMTP_USER}}
      SMTP_PASSWORD: ${{secrets.SMTP_PASSWORD}}
      SMTP_FROM: ${{secrets.SMTP_FROM}}

      STREAM_API_KEY: ${{secrets.STREAM_API_KEY}}
      NEXT_PUBLIC_STREAM_API_KEY: ${{secrets.NEXT_PUBLIC_STREAM_API_KEY}}
      STREAM_API_SECRET: ${{secrets.STREAM_API_SECRET}}

      BASE_URL: ${{secrets.BASE_URL}}
      NEXT_PUBLIC_BASE_URL: ${{secrets.NEXT_PUBLIC_BASE_URL}}
      NEXTAUTH_URL: ${{secrets.NEXTAUTH_URL}}

      UPLOADTHING_SECRET: ${{secrets.UPLOADTHING_SECRET}}
      UPLOADTHING_APP_ID: ${{secrets.UPLOADTHING_APP_ID}}

      DEFAULT_LOCALE: ${{secrets.DEFAULT_LOCALE}}

      BUNNY_API_KEY: ${{secrets.BUNNY_API_KEY}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: CI=true pnpm install
      - name: Generate Prisma Schema
        run: CI=true npx prisma generate
      - name: Apply migrations
        run: CI=true npx prisma db push --accept-data-loss
      - run: pnpm run build --if-present
